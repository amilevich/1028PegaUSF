Doga "Doa" Akata 
akatadoga@gmail.com
8624488797
akatadoga

My responsibilities are general to front-end development.

if you implement OAuth - plus 20 pts, 
Spring Security = plus 20 pts, 
pictures through blobs - 15 pts, 
pictures through AWS: S3 - 30 pts 


Hello, Doga. I hope you had a great Thanksgiving. I was certainly distracted from working. I have only created a skeleton of files last night when I got back from home. For scrum, we are expected to sort everything we do into tickets that we are to complete. Assigning tickets is supposed to be done by a "scrumlord," but since we are just two people, what we really have to do is stay in our lane (front-end vs back-end) and let each other know what we are doing. Our manager pretty much told us that the login function should be done by tomorrow so I have focused on that. "Index.html" has the two text fields for username and password, but with no database checking functionality. It is essentially a copy of what Alex showed us on Wednesday, granted a login screen shouldn't be anymore complicated than that. I have also included a few other webpages in my skeletal work. 

These are the tickets for me to complete before the project is due. It isn't a complete list, but should be enough for a few days work. 
Tickets I have Assigned to Me:
	HTML Files:
	Create a Webpage login screen, "Index.html"
	Create a Webpage main menu for general employees, "EmployeeMainMenu.html"
	Create a Webpage reimbursement form that needs to be filled in and submitted to create a ticket for managers to review, "EmployeeReimbursementForm.html"
	Create a Webpage for employees to view their tickets either active/previous, "EmployeeTicketViewer.html"
	Create a Webpage main menu for financial managers, "ManagerMainMenu.html"
	Create a Webpage for financial managers to view active tickets for review, "EmployeeTicketViewer.html"
	Create a Webpage for financial managers to view the records of approved tickets, "ManagerRecordsViewer.html"
	
	Javascript Files:
	"Login.js", this is supposed to control the sign-in button, so it can send queries to the database
	"ReimbursementForm.js", enables employees to send the data entered into a created ticket that would be stored in a database of tickets awaiting approval.
	"TicketViewer.js", controls getting an employee's personal log of reimbursement requests: approved, denied and active. Should retrieve the employee's data once "EmployeeTicketViewer.html" is activated to show that employee.
	"FM_ReimbursementViewer.js", this is supposed to control looking through active tickets in order to approve/deny them.
	"FM_TicketViewer.js", controls getting ALL employee's log of reimbursement requests: approved, denied and active. Should retrieve the employee's data once "ManagerTicketViewer.html" is activated to show that employee.
	

Let me know what your list of tickets looks like. Then we can re-evaluate our expectations for what we both need to do. The tickets you come up with should be enough for at least three days work.