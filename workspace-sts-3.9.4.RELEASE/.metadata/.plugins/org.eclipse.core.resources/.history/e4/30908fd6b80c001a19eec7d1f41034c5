package com.homework.algorthim;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

public class MainDriver implements Comparator{

	public static void main(String[] args) {
		
//		// Q1. Perform a bubble sort on the following integer array:  1,0,5,6,3,2,3,7,9,8,4
//		Q1BubbleSort bubbleSort = new Q1BubbleSort();
//		int[] arr = {1,0,5,6,3,2,3,7,9,8,4}; 
//		
//		// Before the bubble sort
//		for(int i = 0; i < arr.length; i++) {
//			System.out.println("Before the bubble sort: "+ arr[i]);
//		}
//		
//		//Bubble Sort method ACTIVATE!
//		bubbleSort.bubbleSort(arr);
//		
//		// After the bubble sort
//		for(int i = 0; i < arr.length; i++) {
//			System.out.println("After the bubble sort: "+arr[i]);
//		}
		
//***************************************************************************************************************************************************************************
		
		
//		//Q2. Write a program to display the first 25 Fibonacci numbers beginning at 0. 
//		Q2Fibonacci printFib = new Q2Fibonacci();
//		printFib.printFib(25);
		
//***************************************************************************************************************************************************************************

		//Q3. Reverse a string without using a temporary variable.  Do NOT use reverse() in the StringBuffer or the StringBuilder APIs.
//		Q3ReverseString reverse = new Q3ReverseString();
//		reverse.reverseString("hello");

//***************************************************************************************************************************************************************************
		
		//Q4. Write a program to compute N factorial.
//		Q4Factorial factorial = new Q4Factorial();
//		System.out.println(factorial.factorial(5));

//***************************************************************************************************************************************************************************
		
		//Q5. Write a substring method that accepts a string str and an integer idx and returns the substring contained between 0 and idx-1 inclusive.  Do NOT use any of the existing substring methods in the String, StringBuilder, or StringBuffer APIs.
//		Q5SubString subString = new Q5SubString();
//		System.out.println(subString.subString("Hello World", 6));
//		

//***************************************************************************************************************************************************************************
		
		//Q6. Write a program to determine if an integer is even without using the modulus operator (%).
//		Q6Even even = new Q6Even();
//		even.even(10);
		
//***************************************************************************************************************************************************************************
		
		//Q7. Sort two employees based on their name, department, and age using the Comparator interface.
//		Q7Comparator comparator = new Q7Comparator("Victory", "26", "Software");
//		Q7Comparator comparator1 = new Q7Comparator("Anthony, ", "24", "Software Eng");
//		Q7Comparator comparator2 = new Q7Comparator("Leroy", "20", "Software Engineer");
//
//		ArrayList<Q7Comparator> comparatorList = new ArrayList<Q7Comparator>();
//		comparatorList.add(comparator);
//		comparatorList.add(comparator1);
//		comparatorList.add(comparator2);
//		
//		// unsorted
//		for(int i = 0; i < comparatorList.size(); i++) {
//			System.out.println(comparatorList);
//		}
//		
//		//Sort by name
//		Collections.sort(comparatorList, new sortName());
//		for(int i = 0; i < comparatorList.size(); i++) {
//			System.out.println(comparatorList);
//		}
//		
//		//Sort by age
//		Collections.sort(comparatorList, new sortAge());
//		for(int i = 0; i < comparatorList.size(); i++) {
//			System.out.println(comparatorList);
//		}
//		
//		//Sort by department
//		Collections.sort(comparatorList, new sortDepartment());
//		for(int i = 0; i < comparatorList.size(); i++) {
//			System.out.println(comparatorList);
//		}
//		
//
//	@Override
//	public int compare(Object o1, Object o2) {
//		// TODO Auto-generated method stub
//		return 0;
//	}
//***************************************************************************************************************************************************************************
	
	//Q8. Write a program that stores the following strings in an ArrayList and saves all the palindromes in another ArrayList.
		//“karan”, “madam”, ”tom”, “civic”, “radar”, “sexes”, “jimmy”, “kayak”, “john”,  “refer”, “billy”, “did” 
//
//		Q8Palindromes palindromes = new Q8Palindromes();
//		palindromes.arrayList();
		
//***************************************************************************************************************************************************************************

	//Q9. Create an ArrayList which stores numbers from 1 to 100 and prints out all the prime numbers to the console.
		Q9PrimeNumbers prime = new Q9PrimeNumbers();
		prime.primeNum();
		
	}
}
